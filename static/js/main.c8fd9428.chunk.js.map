{"version":3,"sources":["components/layout/Navbar.js","components/utils/Copy.js","components/layout/Form.js","components/layout/list/ListHead.js","components/layout/list/List.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","title","useState","darkTheme","setDarkTheme","useEffect","localStorage","getItem","alignLinks","brand","href","document","domain","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","id","checked","offLabel","className","left","onChange","ev","target","body","classList","replace","setItem","onLabel","right","Copy","copyText","classes","btnText","onClick","text","textarea","createElement","M","Toast","dismissAll","value","appendChild","select","execCommand","removeChild","toast","html","copyShortLink","defaultProps","Form","shortenURL","setShortenURL","titleFetched","setTitleFetched","urlInput","useRef","submitRef","getTitle","url","axios","get","process","timeout","then","data","description","image","pasteLongURL","a","navigator","clipboard","readText","current","blur","s","onSubmit","preventDefault","URL","elements","stats","isgdAPI","res","shorturl","key","objStr","timestamp","Date","now","localForage","catch","err","message","storeUrl","htmlFor","type","name","ref","placeholder","onKeyDown","keyCode","which","click","required","waves","style","padding","flat","node","marginRight","disabled","aria-hidden","active","color","tooltip","tooltipOptions","position","flashing","size","share","small","shareData","ListHead","onSearch","onSearchCancel","showSearch","setShowSearch","editMode","linkHash","linksCollection","setLinksCollection","links","exportData","linkElem","push","encodeURIComponent","JSON","stringify","download","importData","file","files","Error","reader","FileReader","readAsText","onload","parse","result","pop","concat","window","location","reload","onKeyUp","autoFocus","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","trigger","accept","bottomSheet","fixedFooter","header","open","dismissible","endingTop","opacity","startingTop","removeItem","List","match","history","useHistory","urlList","setUrlList","totalPages","setTotalPages","activePage","setActivePage","editModeActive","setEditModeActive","editObj","setEditObj","page","params","num","length","path","parseInt","slice","onEditClick","currentTarget","parentElement","querySelector","innerText","contains","obj","find","elem","newLinksCollection","filter","newUrlList","add","setTimeout","remove","deleteURL","step","regex","RegExp","filteredUrlList","prevState","map","link","index","rel","items","leftBtn","maxButtons","rightBtn","onSelect","actions","modal","editURL","paddingTop","icon","label","readOnly","Footer","copyrights","App","config","basename","exact","from","to","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8fd9428.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Navbar as Nav, NavItem, Switch } from 'react-materialize';\n\nfunction Navbar({ title }) {\n  const [darkTheme, setDarkTheme] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem('theme') === 'dark') {\n      setDarkTheme(true);\n    }\n  }, []);\n\n  return (\n    <header>\n      <Nav\n        alignLinks='right'\n        brand={<a href={document.domain}>{title}</a>}\n        menuIcon={<Icon>menu</Icon>}\n        options={{\n          draggable: true,\n          edge: 'left',\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 200,\n          preventScrolling: true,\n        }}>\n        <NavItem>\n          <Switch\n            id='theme-switch'\n            checked={darkTheme}\n            offLabel={\n              <Icon className='yellow-text' left>\n                wb_sunny\n              </Icon>\n            }\n            onChange={(ev) => {\n              if (ev.target.checked) {\n                setDarkTheme(true);\n                document.body.classList.replace('light', 'dark');\n                localStorage.setItem('theme', 'dark');\n              } else {\n                setDarkTheme(false);\n                document.body.classList.replace('dark', 'light');\n                localStorage.setItem('theme', 'light');\n              }\n            }}\n            onLabel={\n              <Icon className='yellow-text text-lighten-4' right>\n                brightness_6\n              </Icon>\n            }\n          />\n        </NavItem>\n      </Nav>\n    </header>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-materialize';\nimport M from 'materialize-css';\n\nfunction Copy({ copyText, classes, btnText, title }) {\n  const copyShortLink = (text) => {\n    const textarea = document.createElement('textarea');\n    M.Toast.dismissAll();\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n\n    M.toast({\n      html: `<i class='material-icons green-text'>check_circle</i> &nbsp; Link Copied`,\n      classes: 'copy-toast',\n    });\n  };\n\n  return (\n    <Fragment>\n      <a href='#!' className={classes} onClick={() => copyShortLink(copyText)} title={title}>\n        <Icon left>content_copy</Icon> {btnText}\n      </a>\n    </Fragment>\n  );\n}\n\nCopy.propTypes = {\n  copyText: PropTypes.string.isRequired,\n  classes: PropTypes.string.isRequired,\n  btnText: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nCopy.defaultProps = {\n  btnText: 'Copy',\n};\n\nexport default Copy;\n","import React, { useState, useRef } from 'react';\nimport M from 'materialize-css';\nimport { Button, CardPanel, Col, Icon, Row, Preloader } from 'react-materialize';\nimport Copy from '../utils/Copy';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nfunction Form() {\n  const [shortenURL, setShortenURL] = useState('');\n  const [titleFetched, setTitleFetched] = useState(null);\n  const urlInput = useRef();\n  const submitRef = useRef();\n\n  const storeUrl = (url, shorturl, stats) => {\n    const key = 'linksCollection';\n    const objStr = {\n      url,\n      shorturl,\n      stats,\n      id: shorturl.replace('https://is.gd/', ''),\n      timestamp: Date.now(),\n    };\n\n    localForage\n      .getItem(key)\n      .then((res) => {\n        // Add title to the link optional\n        getTitle(url)\n          .then((title) => {\n            res\n              ? localForage.setItem(key, [{ ...objStr, title }, ...res])\n              : localForage.setItem(key, [{ ...objStr, title }]);\n\n            setTitleFetched(true);\n          })\n          .catch(() => {\n            res ? localForage.setItem(key, [objStr, ...res]) : localForage.setItem(key, [objStr]);\n\n            setTitleFetched(false);\n          });\n      })\n      .catch((err) => {\n        M.toast({\n          html: `<i class='material-icons red-text'>error</i> &nbsp; ${err.message}`,\n          classes: 'error-toast',\n        });\n      });\n  };\n\n  const onSubmit = (ev) => {\n    ev.preventDefault();\n    setTitleFetched(null);\n\n    const url = new URL(ev.target.elements.url.value);\n    const stats = ev.target.elements.stats.checked;\n    const isgdAPI = stats\n      ? `https://is.gd/create.php?format=json&url=${url}&logstats=1`\n      : `https://is.gd/create.php?format=json&url=${url}`;\n\n    axios\n      .get(isgdAPI, { timeout: 5000 })\n      .then((res) => {\n        const { shorturl } = res.data;\n\n        setShortenURL(shorturl);\n        storeUrl(url.href, shorturl, stats);\n      })\n      .catch((err) => {\n        M.toast({\n          html: `<i class='material-icons red-text'>error</i> &nbsp; ${err.message}`,\n          classes: 'error-toast',\n        });\n      });\n\n    ev.target.elements.url.value = '';\n  };\n\n  const getTitle = (url) => {\n    return axios\n      .get(\n        `https://api.linkpreview.net?key=${process.env.REACT_APP_LINK_PREVIEW_API_KEY}&q=${url}`,\n        {\n          timeout: 5000,\n        },\n      )\n      .then(({ data: { title, description, image } }) => title);\n  };\n\n  const shareShortLink = () => {\n    const shareData = {\n      title: `Created with ${document.title}`,\n      text: 'Check this out!',\n      url: shortenURL,\n    };\n    navigator.share(shareData);\n  };\n\n  const pasteLongURL = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      urlInput.current.value = text;\n      urlInput.current.blur();\n    } catch (err) {\n      M.toast({\n        html: `<i class='material-icons red-text'>error</i> &nbsp; Clipboard permission not granted.`,\n        classes: 'error-toast',\n      });\n    }\n  };\n\n  const onEnterKeyPress = (ev) => {\n    const code = ev.keyCode ? ev.keyCode : ev.which;\n\n    if (code === 13) {\n      ev.preventDefault();\n      submitRef.current.click();\n    }\n  };\n\n  return (\n    <section className='form-container'>\n      <CardPanel className='z-depth-2'>\n        <Row>\n          <Col s={12}>\n            <form onSubmit={onSubmit} className='form'>\n              <div className='input-field'>\n                <label className='active' htmlFor='url'>\n                  Enter a Long URL\n                </label>\n                <input\n                  type='url'\n                  name='url'\n                  ref={urlInput}\n                  placeholder='https://mylongurl.com/'\n                  className='validate url'\n                  onKeyDown={onEnterKeyPress}\n                  required\n                />\n                <Button\n                  className='paste-button hide'\n                  waves='light'\n                  style={{ padding: '0' }}\n                  onClick={pasteLongURL}\n                  flat>\n                  <Icon>content_paste</Icon>\n                </Button>\n              </div>\n              <Row>\n                <Col s={12}>\n                  <div className='switch'>\n                    <label>\n                      <span>Show Stats</span>\n                      <input type='checkbox' name='stats' />\n                      <span className='lever'></span>\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <Button node='button' type='submit' style={{ marginRight: '5px' }} waves='light'>\n                <Icon left>content_cut</Icon>\n                <span ref={submitRef}>Shorten It</span>\n              </Button>\n            </form>\n            {shortenURL && (\n              <div>\n                <div className='input-field'>\n                  <input type='url' className='shorten-url' value={shortenURL} disabled />\n                  <Button\n                    flat\n                    aria-hidden='true'\n                    className='shorturl-title-preload'\n                    style={{ padding: '0' }}\n                    waves='light'>\n                    {titleFetched === null && (\n                      <Preloader\n                        active\n                        color='blue'\n                        tooltip='Fetching link title'\n                        tooltipOptions={{ position: 'top' }}\n                        flashing={false}\n                        size='small'\n                      />\n                    )}\n                    {titleFetched === false && (\n                      <Icon\n                        tooltip='Fetching link title failed'\n                        tooltipOptions={{ position: 'top' }}\n                        className='red-text'>\n                        highlight_off\n                      </Icon>\n                    )}\n                    {titleFetched && (\n                      <Icon\n                        tooltip='Link title fetched'\n                        tooltipOptions={{ position: 'top' }}\n                        className='green-text'>\n                        check_circle\n                      </Icon>\n                    )}\n                  </Button>\n                </div>\n                {navigator.share && (\n                  <Button\n                    small\n                    onClick={shareShortLink}\n                    node='button'\n                    style={{ marginRight: '5px' }}\n                    waves='light'>\n                    <Icon left>share</Icon>\n                    <span>Share</span>\n                  </Button>\n                )}\n                <Copy\n                  copyText={shortenURL}\n                  classes='btn btn-small waves-effect waves-light'\n                  btnText='Copy'\n                  title='Copy ShortURL to Clipboard'\n                />\n              </div>\n            )}\n          </Col>\n        </Row>\n      </CardPanel>\n    </section>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { Dropdown, Modal, Icon, Button, TextInput } from 'react-materialize';\nimport localForage from 'localforage';\n\nfunction ListHead({ onSearch, onSearchCancel, showSearch, setShowSearch, editMode }) {\n  const linkHash = 'e5a9cc5a85b282aec3acbc5f95bd009a';\n  const [linksCollection, setLinksCollection] = useState(false);\n\n  useEffect(() => {\n    localForage.getItem('linksCollection').then((links) => setLinksCollection(links !== null));\n  }, []);\n\n  const exportData = () => {\n    const linkElem = document.createElement('a');\n\n    localForage.getItem('linksCollection').then((links) => {\n      if (links) {\n        links.push({ id: linkHash });\n        linkElem.href = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(links))}`;\n        linkElem.download = `${document.domain}.json`;\n        document.body.appendChild(linkElem);\n        linkElem.click();\n        document.body.removeChild(linkElem);\n\n        M.toast({\n          html: `<i class='material-icons blue-text'>info</i> &nbsp; Please download your backup and Keep it safe.`,\n        });\n      } else {\n        M.toast({\n          html: `<i class='material-icons red-text'>error</i> &nbsp; Nothing to export`,\n          classes: 'error-toast',\n        });\n      }\n    });\n  };\n\n  const importData = (ev) => {\n    const file = ev.target.files[0];\n\n    try {\n      if (file && file.type === 'application/json') {\n        const reader = new FileReader();\n        reader.readAsText(file, 'UTF-8');\n\n        reader.onload = (ev) => {\n          localForage.getItem('linksCollection').then((links) => {\n            const data = JSON.parse(ev.target.result);\n            const fileId = data.pop().id;\n\n            if (fileId === linkHash) {\n              links === null\n                ? localForage.setItem('linksCollection', data)\n                : localForage.setItem('linksCollection', data.concat(links));\n\n              window.location.reload();\n            } else {\n              throw new Error('Not a valid file');\n            }\n          });\n        };\n      } else {\n        throw new Error('Not a valid file');\n      }\n    } catch (err) {\n      M.toast({\n        html: `<i class='material-icons red-text'>error</i> &nbsp; ${err.message}`,\n        classes: 'error-toast',\n      });\n    }\n  };\n\n  const deleteData = () => {\n    localForage.removeItem('linksCollection');\n    window.location.reload();\n  };\n\n  if (showSearch)\n    return (\n      <div className='search-input-container'>\n        <TextInput placeholder='Enter Search Keyword' onKeyUp={onSearch} autoFocus />\n        <Button className='red darken-1' onClick={onSearchCancel}>\n          <Icon>close</Icon>\n        </Button>\n      </div>\n    );\n\n  return (\n    <div className='list-head'>\n      <div className='heading'>Recent Shorten Links</div>\n      {linksCollection && (\n        <span className='list-dropdown'>\n          <a href='#!' onClick={() => setShowSearch(true)}>\n            <Icon>search</Icon>\n          </a>\n          <Dropdown\n            id='list-dropdown'\n            options={{\n              alignment: 'left',\n              autoTrigger: true,\n              closeOnClick: true,\n              constrainWidth: true,\n              container: null,\n              coverTrigger: true,\n              hover: false,\n              inDuration: 150,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              outDuration: 250,\n            }}\n            trigger={\n              <a href='#!'>\n                <Icon right>more_vert</Icon>\n              </a>\n            }>\n            <a href='#!' onClick={editMode}>\n              <Icon left>edit</Icon> Edit Mode\n            </a>\n            <a href='#!' onChange={importData}>\n              <Icon left>import_export</Icon>\n              <input type='file' accept='.json' className='import-file-input' />\n            </a>\n            <a href='#!' onClick={exportData}>\n              <Icon left>cloud_download</Icon> Export\n            </a>\n            <a className='modal-trigger' href='#delete-modal'>\n              <Icon left>delete</Icon> Delete All\n            </a>\n          </Dropdown>\n        </span>\n      )}\n      {!linksCollection && (\n        <Dropdown\n          id='list-dropdown'\n          options={{\n            alignment: 'left',\n            autoTrigger: true,\n            closeOnClick: true,\n            constrainWidth: true,\n            container: null,\n            coverTrigger: true,\n            hover: false,\n            inDuration: 150,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 250,\n          }}\n          trigger={\n            <a href='#!'>\n              <Icon right>more_vert</Icon>\n            </a>\n          }>\n          <a href='#!' onChange={importData}>\n            <Icon left>import_export</Icon>\n            <input type='file' accept='.json' className='import-file-input' />\n          </a>\n        </Dropdown>\n      )}\n      <Modal\n        bottomSheet={false}\n        fixedFooter={false}\n        header='Delete All links stored locally?'\n        id='delete-modal'\n        open={false}\n        options={{\n          dismissible: true,\n          endingTop: '10%',\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          opacity: 0.5,\n          outDuration: 250,\n          preventScrolling: true,\n          startingTop: '4%',\n        }}>\n        <h6>\n          <b>Note:</b> All your created short links will continue to redirect to their destination.\n        </h6>\n        <p>\n          Meanwhile, You can download your backup data&nbsp;\n          <a href='#!' onClick={exportData}>\n            here.\n          </a>\n        </p>\n        <Button className='red darken-1' node='button' onClick={deleteData}>\n          Yes\n        </Button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ListHead;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\nimport {\n  Collection,\n  CollectionItem,\n  Col,\n  Icon,\n  Pagination,\n  Row,\n  Modal,\n  Button,\n  TextInput,\n} from 'react-materialize';\nimport Copy from '../../utils/Copy';\nimport ListHead from './ListHead';\nimport localForage from 'localforage';\n\nfunction List({ match }) {\n  const history = useHistory();\n  const [urlList, setUrlList] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [activePage, setActivePage] = useState(1);\n  const [showSearch, setShowSearch] = useState(false);\n  const [editModeActive, setEditModeActive] = useState(false);\n  const [editObj, setEditObj] = useState({\n    url: '',\n    shorturl: '',\n    title: '',\n    id: '',\n  });\n\n  useEffect(() => {\n    localForage.getItem('linksCollection').then((links) => {\n      const { page } = match.params;\n\n      if (links) {\n        let num = 1;\n        const step = 10;\n        const length = links.length;\n        while (step * num < length) {\n          num++;\n        }\n\n        setTotalPages(num);\n        if (match.path !== '/') setActivePage(parseInt(page));\n\n        setUrlList(links.slice(activePage * step - step, activePage * step));\n      }\n    });\n  }, [totalPages, activePage, match]);\n\n  const onSearch = (ev, step = 10) => {\n    const value = ev.target.value;\n\n    localForage.getItem('linksCollection').then((links) => {\n      if (links) {\n        const regex = new RegExp(value, 'gi');\n        const filteredUrlList = links.filter((url) => {\n          if (!url.title) return url.url.match(regex) || url.shorturl.match(regex);\n\n          return url.url.match(regex) || url.shorturl.match(regex) || url.title.match(regex);\n        });\n\n        setUrlList(filteredUrlList.slice(0, step));\n      }\n    });\n  };\n\n  const onSearchCancel = () => {\n    setShowSearch(false);\n    history.push('/');\n  };\n\n  const deleteURL = (id, elem) => {\n    localForage.getItem('linksCollection').then((links) => {\n      const newLinksCollection = links.filter((url) => url.id !== id);\n      const newUrlList = urlList.filter((url) => url.id !== id);\n\n      elem.classList.add('deleting-item');\n      M.Toast.dismissAll();\n      localForage.setItem('linksCollection', newLinksCollection);\n      setUrlList(newUrlList);\n      setTimeout(() => elem.classList.remove('deleting-item'), 500);\n      M.toast({\n        html: `<i class='material-icons red-text'>check_circle</i> &nbsp; URL Deleted`,\n        classes: 'delete-toast',\n      });\n    });\n  };\n\n  const editURL = ({ id }) => {\n    localForage.getItem('linksCollection').then((links) => {\n      const newUrlList = urlList.map((url) => (url.id === id ? editObj : url));\n      const newLinksCollection = links.map((url) => (url.id === id ? editObj : url));\n\n      setUrlList(newUrlList);\n      localForage.setItem('linksCollection', newLinksCollection);\n    });\n  };\n\n  const onEditClick = (ev) => {\n    const { target, currentTarget } = ev;\n\n    localForage.getItem('linksCollection').then((links) => {\n      const id = target.parentElement.parentElement.parentElement\n        .querySelector('.shorturl')\n        .innerText.replace('https://is.gd/', '');\n\n      if (target.classList.contains('edit')) {\n        let obj = links.find((url) => url.id === id);\n        setEditObj({ title: '', ...obj });\n      } else if (target.classList.contains('delete')) {\n        deleteURL(id, currentTarget);\n      }\n    });\n  };\n\n  return (\n    <section className='links-collection z-depth-2'>\n      <Collection\n        header={\n          <ListHead\n            onSearch={onSearch}\n            onSearchCancel={onSearchCancel}\n            showSearch={showSearch}\n            setShowSearch={setShowSearch}\n            editMode={() => setEditModeActive((prevState) => !prevState)}\n          />\n        }>\n        {urlList.length === 0 && (\n          <CollectionItem>\n            <br />\n            <h5 className='grey-text'>Your history will appear here.</h5>\n            <br />\n          </CollectionItem>\n        )}\n        {activePage > totalPages && urlList.length > 0 && (\n          <CollectionItem>\n            <br />\n            <h5 className='grey-text'>Page not found</h5>\n            <br />\n          </CollectionItem>\n        )}\n        {urlList.map((link, index) => (\n          <CollectionItem key={index} onClick={onEditClick}>\n            <Row>\n              <Col s={editModeActive ? 12 : 10} style={{ padding: '0px' }}>\n                {editModeActive && (\n                  <div className='edit-mode-icons'>\n                    <a href='#Edit-Modal' className='modal-trigger'>\n                      <Icon left className='edit'>\n                        edit\n                      </Icon>\n                    </a>\n                    <a href='#!'>\n                      <Icon left className='delete'>\n                        delete\n                      </Icon>\n                    </a>\n                  </div>\n                )}\n                <div className='truncate' title='Title'>\n                  {link.title ? link.title : link.url}\n                </div>\n                <div className='truncate blue-text shorturl' title='Short URL'>\n                  {link.shorturl}\n                </div>\n              </Col>\n              {!editModeActive && (\n                <Col s={2} className='center-align'>\n                  <Copy\n                    copyText={link.shorturl}\n                    classes='secondary-content secondary-copy-btn'\n                    btnText=''\n                    title='Copy ShortURL to Clipboard'\n                  />\n                  {link.stats && !editModeActive && (\n                    <a\n                      href={`https://is.gd/stats.php?url=${link.id}`}\n                      target='_blank'\n                      rel='noreferrer noopener'\n                      className='secondary-content'\n                      title='Check Statistics'>\n                      <Icon left>show_chart</Icon>\n                    </a>\n                  )}\n                </Col>\n              )}\n            </Row>\n          </CollectionItem>\n        ))}\n        {!showSearch && (\n          <CollectionItem className='center-align'>\n            <Pagination\n              activePage={activePage}\n              items={totalPages}\n              leftBtn={<Icon>chevron_left</Icon>}\n              maxButtons={5}\n              rightBtn={<Icon>chevron_right</Icon>}\n              onSelect={(num) => {\n                history.push(`/${num}`);\n              }}\n            />\n          </CollectionItem>\n        )}\n      </Collection>\n      <Modal\n        actions={[\n          <Button modal='close' node='button' className='red'>\n            Cancel\n          </Button>,\n          <span>&nbsp;&nbsp;&nbsp;</span>,\n          <Button modal='close' node='button' className='blue' onClick={() => editURL(editObj)}>\n            Edit\n          </Button>,\n        ]}\n        className='edit-modal'\n        bottomSheet={false}\n        fixedFooter\n        header='Edit URL'\n        id='Edit-Modal'\n        options={{\n          dismissible: true,\n          endingTop: '10%',\n          inDuration: 250,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          opacity: 0.5,\n          outDuration: 250,\n          preventScrolling: true,\n          startingTop: '4%',\n        }}>\n        <div style={{ paddingTop: '10px' }}>\n          <TextInput\n            type='text'\n            icon='title'\n            value={editObj.title}\n            name='title'\n            onChange={(ev) => setEditObj({ ...editObj, [ev.target.name]: ev.target.value })}\n            label='Title'\n          />\n          <TextInput\n            type='url'\n            icon='public'\n            value={editObj.url}\n            name='url'\n            label='Full URL'\n            readOnly\n          />\n          <TextInput\n            type='url'\n            icon='link'\n            value={editObj.shorturl}\n            name='shorturl'\n            label='Short URL'\n            readOnly\n          />\n        </div>\n      </Modal>\n    </section>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { Footer as Foot, Icon } from 'react-materialize';\n\nfunction Footer() {\n  return (\n    <Foot className='footer z-depth-2' copyrights='&copy; 2020'>\n      <h5 className='white-text'>URL Shortner v{process.env.REACT_APP_VERSION}</h5>\n      <p className='grey-text text-lighten-4 valign-wrapper'>\n        Made with &nbsp; <Icon className='red-text'>favorite</Icon>\n        &nbsp; by &nbsp;\n        {process.env.REACT_APP_AUTHOR}\n      </p>\n    </Foot>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport localForage from 'localforage';\nimport Navbar from './components/layout/Navbar';\nimport Form from './components/layout/Form';\nimport List from './components/layout/list/List';\nimport Footer from './components/layout/Footer';\nimport './scss/App.scss';\n\nfunction App() {\n  useEffect(() => {\n    if (localStorage.getItem('theme')) document.body.className = localStorage.getItem('theme');\n\n    localForage.config({\n      name: 'URL Shortener',\n    });\n  }, []);\n\n  return (\n    <BrowserRouter basename='/url_shortener_is.gd'>\n      <div className='App'>\n        <Navbar title='URL Shortener' />\n        <div className='container'>\n          <Form />\n          <Switch>\n            <Redirect exact from='/' to='/1' />\n            <Route exact from='/:page' component={List} />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}